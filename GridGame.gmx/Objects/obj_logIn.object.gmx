<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Login();

setnagle(global.socket, false);

//Send Login Details
clearbuffer();
writebyte(1); // 1 = Login
writestring(global.username);
writestring(global.password);
//send_msg(); Implement this later
sendmessage(global.socket);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if we have a new message and if the client is still connected
var size;
//Retrieve the amount of bytes that the buffer currently has
size=receivemessage(global.socket);
//If the amount of bytes is less than 0 exit, meaning that we don't have a new message
if (size&lt;0)
{
    exit;
}
//If the amount of bytes is higher than 0 go and process the package, meaning that we have a new message
if (size&gt;0)
{
    //messageString = "Client : size = " + string(size); 
    //show_message(messageString);
    event_user(0);
}
if (size=0)
{
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message(messageID);
messageID = readbyte();
//messageString = "Client : messageID = " + string(messageID);
//show_message(messageString);
if(messageID == ACCOUNT_LOGIN_SUCCESS)
{
    show_message("Login Successful! Welcome "+global.username);
    global.lannisters    = readbyte();
    global.starks        = readbyte();
    global.targaryans    = readbyte();
    global.greyjoys      = readbyte();
    global.baratheons    = readbyte();
    global.arryns        = readbyte();
    global.tyrells       = readbyte();
    global.martells      = readbyte();
    
    global.GameState = GAME_STATE_MAINMENU;
    room_goto(mrm_mainMenu);
}
else if(messageID == ACCOUNT_LOGIN_FAIL)
{
    show_message("Login Failed!");
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
